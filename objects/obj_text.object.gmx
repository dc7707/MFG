<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 0;
print = "";
time = 0;
time_passed = 0;
duration = 10;
depth = depth - instance_number(obj_text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add letters over time
if (time &lt; text_length) {
    time += spd;
    print = string_copy(text,0,time);
}
if (time_passed &lt; duration) {
    time_passed += 1 / room_speed;
    obj_player.state = scr_freeze_state;
    if (time_passed &lt;= 2 / room_speed) {} else {
        if (keyboard_check_pressed(ord("X"))) {
             obj_player.state = scr_move_state;
            instance_destroy();
        }
    }
}

if (time_passed &gt;= duration) {
    obj_player.state = scr_move_state;
    instance_destroy();
}

///Render textbox &amp; text
draw_set_alpha(alpha);
if (alpha &lt; 1) {alpha += spd/10;} else {alpha = 1;}

draw_set_font(font);
draw_set_color(c_black);
draw_rectangle(x,y,x+box_width,y+box_height,0);
draw_set_color(c_gray);
draw_rectangle(x,y,x+box_width,y+box_height,1);
fnt_clr = make_colour_rgb(0,255,0);
draw_set_color(fnt_clr);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_ext(
    x + padding,
    y + padding,
    print,
    font_size + (font_size/2),
    maxlength
)
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
