<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
global.ps = part_system_create();

c1 = make_colour_rgb(random(255), random(255), random(255));
c2 = make_colour_rgb(random(255), random(255), random(255));

//particle 1
global.pt_sphere = part_type_create();
var pt = global.pt_sphere;
part_type_shape(pt, pt_shape_smoke);
part_type_size(pt, 1,5,.01,0);
part_type_colour1(pt,c1);
part_type_alpha1(pt,0.05);
part_type_blend(pt,0);
part_type_speed(pt,.02,.2,0,0);
part_type_direction(pt,0,360,0,0);
part_system_depth(pt,100);
part_type_life(pt,room_speed * 3, room_speed * 3);

//particle 2
global.pt_sphere2 = part_type_create();
var pt2 = global.pt_sphere2;
part_type_shape(pt2, pt_shape_smoke);
part_type_size(pt2, 1,5,.01,0);
part_type_colour1(pt2,c2);
part_type_alpha1(pt2,0.05);
part_type_blend(pt2,0);
part_type_speed(pt2,.02,.2,0,0);
part_type_direction(pt2,0,360,0,0);
part_system_depth(pt2,100);
part_type_life(pt2,room_speed * 3, room_speed * 3);

//emitter 1
var shape=ps_shape_ellipse;
var distr=ps_distr_linear;
em = part_emitter_create(global.ps);
part_emitter_region(global.ps,em,0,room_width,0,room_height,shape,distr);
part_emitter_stream(global.ps,em,global.pt_sphere,2);

//emitter 2
em2 = part_emitter_create(global.ps);
part_emitter_region(global.ps,em2,0,room_width,0,room_height,shape,distr);
part_emitter_stream(global.ps,em2,global.pt_sphere2,5);
part_emitter_stream(global.ps,em2,global.pt_sphere2,5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(global.pt_sphere);
part_type_destroy(global.pt_sphere2);
part_system_destroy(global.ps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
