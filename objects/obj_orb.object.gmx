<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_orb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 30 / room_speed;
targetx = random(room_width);
targety = random(room_height);
orbDirection = random(4);

if (orbDirection == 1) {
    phy_position_x += sign(targetx - x)*speed;
    phy_position_y += sign(targety - y)*speed;
} else { 
    phy_position_x -= sign(targetx - x)*speed;
    phy_position_y -= sign(targety - y)*speed;
}

switch(orbDirection)
{
    case 1: 
        phy_position_x += sign(targetx - x)*speed; 
        phy_position_y += sign(targety - y)*speed; 
    break;
    case 2: 
        phy_position_x -= sign(targetx - x)*speed;
        phy_position_y -= sign(targety - y)*speed;
    break;
    case 3: 
        phy_position_x += sign(targetx - x)*speed;
        phy_position_y -= sign(targety - y)*speed;
    break;
    
    case 4: 
        phy_position_x -= sign(targetx - x)*speed;
        phy_position_y += sign(targety - y)*speed;
    break;
}

if x &lt; -256 or y &lt; -256 or x &gt; room_width + 256 or y &gt; room_height + 256 {
    instance_destroy();
    scr_create_orbs();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
